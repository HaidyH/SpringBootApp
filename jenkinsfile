pipeline {
    agent any

    stages {
        stage('Lint Stage') {
            steps {
                // Execute linting step
                sh 'npm run lint'
            }
        }

        stage('Unit Test Stage') {
            steps {
                // Execute unit tests
                sh 'npm run test'
            }
        }

        stage('SonarQube Stage') {
            steps {
                // Execute SonarQube analysis
                sh 'sonar-scanner'
            }
        }

        stage('Build Image Stage') {
            steps {
                // Build the Docker image
                sh 'docker build -t spring-boot-app:latest .'
            }
        }

        stage('Push Image to Registry') {
            steps {
                // Push the Docker image to the registry
                sh 'docker push myregistry/spring-boot-app:latest'
            }
        }

        stage('Pull Image from Registry') {
            steps {
                // Pull the Docker image from the registry
                sh 'docker pull myregistry/spring-boot-app:latest'
            }
        }

        stage('Deploy to Kubernetes Cluster') {
            steps {
                // Deploy the Spring Boot app to the Kubernetes cluster
                sh 'kubectl apply -f deployment.yaml'
            }
        }

        stage('Create Ingress') {
            steps {
                // Create the Ingress for the app
                sh 'kubectl apply -f ingress.yaml'
            }
        }

        stage('Deploy on Development Environment') {
            steps {
                // Deploy the app on the development environment
                sh 'kubectl apply -f development.yaml'
            }
        }

        stage('Deploy on Production Environment') {
            steps {
                // Deploy the app on the production environment
                sh 'kubectl apply -f production.yaml'
            }
        }
    }
}